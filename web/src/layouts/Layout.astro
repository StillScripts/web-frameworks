---
import Sidebar from "../components/Sidebar.astro";
import FrameworkSelector from "../components/FrameworkSelector.jsx";
import { Components, Framework, getComponentTitle } from "../utils/components";
import MinimalLayout from "./MinimalLayout.astro";

export interface Props {
  title: string;
  framework?: Framework;
  component?: Components;
}

const {
  title,
  component = Components.HelloWorld,
  framework = "React",
} = Astro.props;
---

<MinimalLayout title={title}>
  <div class="flex h-full w-full">
    <Sidebar component={component} framework={framework} />
    <main class="w-full min-h-full flex flex-col justify-between">
      <div
        class="w-full mx-auto border-b border-gray-300 leading-7 max-w-7xl py-6 px-4 sm:px-6 md:px-8"
      >
        <div
          class="text-center md:text-left md:flex md:items-center md:justify-between"
        >
          <div class="min-w-0 flex-1">
            <h2 class="text-2xl font-bold text-gray-900 sm:text-3xl">
              {getComponentTitle(component)}
            </h2>
          </div>

          <div><FrameworkSelector component={component} client:load /></div>
        </div>
      </div>
      <div class="mt-6 w-full mx-auto max-w-7xl px-4 sm:px-6 md:px-8">
        <div class="py-4">
          <div class="mx-auto p-6 text-center max-w-screen-sm">
            <div
              class="my-5 p-8 inline-block border border-gray-200 shadow-lg rounded-lg"
            >
              <slot />
            </div>
            <a
              href="#"
              class="block mt-3 text-base font-medium text-sky-600 hover:text-sky-500"
            >
              View source code
              <span aria-hidden="true"> &rarr;</span>
            </a>
          </div>
        </div>
      </div>

      <div class="w-full mx-auto max-w-7xl py-6 px-4 sm:px-6 md:px-8">
        <div class="flex items-center justify-between">
          {
            component !== Components.HelloWorld ? (
              <a
                href={`/svelte/${component - 1}`}
                class="inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-sky-500 focus:ring-offset-2"
              >
                <svg
                  class="mr-1 h-5 w-5 text-gray-400"
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                  aria-hidden="true"
                >
                  <path
                    fill-rule="evenodd"
                    d="M18 10a.75.75 0 01-.75.75H4.66l2.1 1.95a.75.75 0 11-1.02 1.1l-3.5-3.25a.75.75 0 010-1.1l3.5-3.25a.75.75 0 111.02 1.1l-2.1 1.95h12.59A.75.75 0 0118 10z"
                    clip-rule="evenodd"
                  />
                </svg>
                {getComponentTitle(component - 1)}
              </a>
            ) : (
              <div />
            )
          }

          {
            component !== Components.ListLooping ? (
              <a
                href={`/svelte/${component + 1}`}
                class="inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-sky-500 focus:ring-offset-2"
              >
                {getComponentTitle(component + 1)}{" "}
                <svg
                  class="ml-1 h-5 w-5 text-gray-400"
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                  aria-hidden="true"
                >
                  <path
                    fill-rule="evenodd"
                    d="M2 10a.75.75 0 01.75-.75h12.59l-2.1-1.95a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.1-1.95H2.75A.75.75 0 012 10z"
                    clip-rule="evenodd"
                  />
                </svg>
              </a>
            ) : (
              <div />
            )
          }
        </div>
      </div>
    </main>
  </div>
</MinimalLayout>
