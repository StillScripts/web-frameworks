{"react":{"BasicVariables":"import { useState } from \"react\"\n\nconst BasicVariables = () => {\n  const [count, setCount] = useState(0)\n\n  function handleClick() {\n    setCount(count + 1)\n  }\n  return (\n    <button onClick={handleClick}>\n      Clicked {count} {count === 1 ? \"time\" : \"times\"}\n    </button>\n  )\n}\n\nexport default BasicVariables\n","ConditionalRendering":"import { useState } from \"react\"\n\nconst ConditionalRendering = () => {\n  const [x] = useState(Math.floor(Math.random() * 15))\n\n  return (\n    <>\n      {x > 10 ? (\n        <p>{x} is greater than 10</p>\n      ) : 5 > x ? (\n        <p>{x} is less than 5</p>\n      ) : (\n        <p>{x} is between 5 and 10</p>\n      )}\n    </>\n  )\n}\n\nexport default ConditionalRendering\n","DependentVariables":"import { useEffect, useState } from \"react\"\n\nconst DependentVariables = () => {\n  const [count, setCount] = useState(1)\n  const [doubled, setDoubled] = useState(count * 2)\n  const [quadrupled, setQuadrupled] = useState(doubled * 2)\n\n  useEffect(() => {\n    setDoubled(count * 2)\n    setQuadrupled(doubled * 2)\n  }, [count, doubled])\n\n  function handleClick() {\n    setCount(count + 1)\n  }\n\n  return (\n    <>\n      <button onClick={handleClick}>Count: {count}</button>\n      <p>\n        {count} * 2 = {doubled}\n      </p>\n      <p>\n        {doubled} * 2 = {quadrupled}\n      </p>\n    </>\n  )\n}\n\nexport default DependentVariables\n","HelloWorld":"import React from \"react\"\n\nconst HelloWorld = () => <p>Hello world!</p>\n\nexport default HelloWorld\n","HTML":"import React from \"react\"\n\nconst string = `here's some <strong>HTML!!!</strong>`\n\nconst HTML = () => <p dangerouslySetInnerHTML={{ __html: string }}></p>\n\nexport default HTML\n","ListLooping":"import React from \"react\"\n\nconst cats = [\n  { id: \"J---aiyznGQ\", name: \"Keyboard Cat\" },\n  { id: \"z_AbfPXTKms\", name: \"Maru\" },\n  { id: \"OUtn3pvWmpg\", name: \"Henri The Existential Cat\" },\n]\n\nconst ListLooping = () => {\n  return (\n    <>\n      <h1>The Famous Cats of YouTube</h1>\n      <ul>\n        {cats.map(({ id, name }, i) => (\n          <li key={id}>\n            <a href={`https://www.youtube.com/watch?v=${id}`}>\n              <a target=\"_blank\">\n                {i + 1}: {name}\n              </a>\n            </a>\n          </li>\n        ))}\n      </ul>\n    </>\n  )\n}\n\nexport default ListLooping\n","Props":"import React from \"react\"\n\nconst Props = ({ answer = \"a mystery\" }) => <p>The answer is {answer}</p>\n\nexport default Props\n","ReactComponents":"import React from \"react\"\nimport BasicVariables from \"./BasicVariables\"\nimport ConditionalRendering from \"./ConditionalRendering\"\nimport DependentVariables from \"./DependentVariables\"\nimport HelloWorld from \"./HelloWorld\"\nimport HTML from \"./HTML\"\nimport ListLooping from \"./ListLooping\"\nimport Props from \"./Props\"\nimport Styling from \"./Styling\"\nimport { Components } from \"../../utils/components\"\n\nconst ReactComponents = ({ currentComponent }) => {\n  return (\n    <>\n      {currentComponent === Components.HelloWorld ? (\n        <HelloWorld />\n      ) : currentComponent === Components.Styling ? (\n        <Styling />\n      ) : currentComponent === Components.Props ? (\n        <Props answer=\"42\" />\n      ) : currentComponent === Components.HTML ? (\n        <HTML />\n      ) : currentComponent === Components.BasicVariables ? (\n        <BasicVariables />\n      ) : currentComponent === Components.DependentVariables ? (\n        <DependentVariables />\n      ) : currentComponent === Components.ConditionalRendering ? (\n        <ConditionalRendering />\n      ) : (\n        <ListLooping />\n      )}\n    </>\n  )\n}\n\nexport default ReactComponents\n","Styling":"import React from \"react\"\n\nconst styles = {\n  color: \"purple\",\n  fontFamily: \"'Comic Sans MS', cursive\",\n  fontSize: \"2em\",\n}\n\nconst Styling = () => <p style={styles}>Styled!</p>\n\nexport default Styling\n"}}